{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# imports\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import mean_absolute_error\n","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:13.655793Z","iopub.execute_input":"2023-10-28T11:26:13.656342Z","iopub.status.idle":"2023-10-28T11:26:14.770454Z","shell.execute_reply.started":"2023-10-28T11:26:13.656276Z","shell.execute_reply":"2023-10-28T11:26:14.769228Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# # ladda upp data\n# # vi are loading in only train set that will later be divided into train and val \n# data = pd.read_csv(\"C:/Users/mreic/Desktop/Agilt/data/train.csv\")\n# test_data = pd.read_csv('C:/Users/mreic/Desktop/Agilt/data/example_test_files/test.csv')","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:14.772451Z","iopub.execute_input":"2023-10-28T11:26:14.773147Z","iopub.status.idle":"2023-10-28T11:26:14.778874Z","shell.execute_reply.started":"2023-10-28T11:26:14.773101Z","shell.execute_reply":"2023-10-28T11:26:14.776911Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ladda upp data\n# vi are loading in only train set that will later be divided into train and val \ndata = pd.read_csv(\"/kaggle/input/optiver-trading-at-the-close/train.csv\")\ntest_data = pd.read_csv('/kaggle/input/optiver-trading-at-the-close/train.csv')","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:14.780788Z","iopub.execute_input":"2023-10-28T11:26:14.781477Z","iopub.status.idle":"2023-10-28T11:26:46.221607Z","shell.execute_reply.started":"2023-10-28T11:26:14.781432Z","shell.execute_reply":"2023-10-28T11:26:46.220394Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# checking the missing values if there are few columns at the same time but witout near_price och far_price\ncondition = data.columns.difference(['near_price', 'far_price'])","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:46.224415Z","iopub.execute_input":"2023-10-28T11:26:46.224762Z","iopub.status.idle":"2023-10-28T11:26:46.230494Z","shell.execute_reply.started":"2023-10-28T11:26:46.224732Z","shell.execute_reply":"2023-10-28T11:26:46.229172Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"missing_rows = data[data[condition].isna().any(axis=1)]\n\n\nprint(\"Rader med saknade värden (utom 'near_price' och 'far_price'):\")\nprint(missing_rows)","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2023-10-28T11:26:46.232017Z","iopub.execute_input":"2023-10-28T11:26:46.232388Z","iopub.status.idle":"2023-10-28T11:26:47.144944Z","shell.execute_reply.started":"2023-10-28T11:26:46.232355Z","shell.execute_reply":"2023-10-28T11:26:47.143729Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Använd dropna() med subset för att ta bort rader med saknade värden i alla kolumner utom 'near_price' och 'far_price'\ndata = data.dropna(subset=data.columns.difference(['near_price', 'far_price']))\n\n","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:47.146412Z","iopub.execute_input":"2023-10-28T11:26:47.146778Z","iopub.status.idle":"2023-10-28T11:26:48.544304Z","shell.execute_reply.started":"2023-10-28T11:26:47.146747Z","shell.execute_reply":"2023-10-28T11:26:48.543062Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Fyll saknade värden i 'near_price' och 'far_price' med 0\ndata['near_price'].fillna(0, inplace=True)\ndata['far_price'].fillna(0, inplace=True)\n\ntest_data['near_price'].fillna(0, inplace=True)\ntest_data['far_price'].fillna(0, inplace=True)\n","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:48.546076Z","iopub.execute_input":"2023-10-28T11:26:48.54697Z","iopub.status.idle":"2023-10-28T11:26:48.606811Z","shell.execute_reply.started":"2023-10-28T11:26:48.546932Z","shell.execute_reply":"2023-10-28T11:26:48.605497Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"missin_valu_count=data.isna().sum()\nprint(missin_valu_count)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:48.608498Z","iopub.execute_input":"2023-10-28T11:26:48.608983Z","iopub.status.idle":"2023-10-28T11:26:49.261754Z","shell.execute_reply.started":"2023-10-28T11:26:48.608948Z","shell.execute_reply":"2023-10-28T11:26:49.260361Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# missin_valu_count=x.isna().sum()\n# print(missin_valu_count)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:49.263486Z","iopub.execute_input":"2023-10-28T11:26:49.264729Z","iopub.status.idle":"2023-10-28T11:26:49.269565Z","shell.execute_reply.started":"2023-10-28T11:26:49.26469Z","shell.execute_reply":"2023-10-28T11:26:49.268349Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model 3","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"median_vol = data.groupby('stock_id')['bid_size'].median() + data.groupby('stock_id')['ask_size'].median()","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:49.274174Z","iopub.execute_input":"2023-10-28T11:26:49.275147Z","iopub.status.idle":"2023-10-28T11:26:49.740575Z","shell.execute_reply.started":"2023-10-28T11:26:49.275112Z","shell.execute_reply":"2023-10-28T11:26:49.73923Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = data","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:49.741851Z","iopub.execute_input":"2023-10-28T11:26:49.742189Z","iopub.status.idle":"2023-10-28T11:26:49.748153Z","shell.execute_reply.started":"2023-10-28T11:26:49.742144Z","shell.execute_reply":"2023-10-28T11:26:49.746669Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from itertools import *\nimport gc\ndef data_preprocessing(df):\n    cols = [c for c in df.columns if c not in ['row_id', 'time_id']]\n    df = df[cols]\n    \n    df['imbalance_buy_flag'] = np.where(df['imbalance_buy_sell_flag']==1, 1, 0) \n    df['imbalance_sell_flag'] = np.where(df['imbalance_buy_sell_flag']==-1, 1, 0) \n    df['no_imbalance'] = np.where(df['imbalance_buy_sell_flag']==0, 1, 0) \n    df['bid_plus_ask_sizes'] = df['bid_size'] + df['ask_size']\n    df['median_vol'] = df['stock_id'].map(median_vol.to_dict())\n    df['high_volume'] = np.where(df['bid_plus_ask_sizes'] > df['median_vol'], 1, 0) \n    df['imbalance_ratio'] = df['imbalance_size'] / df['matched_size']\n    df['bid_ask_volume_diff'] = df['ask_size'] - df['bid_size']\n    df['mid_price'] = (df['ask_price'] + df['bid_price']) / 2\n    df['bid_plus_ask_sizes'] = df['bid_size'] + df['ask_size']\n\n    prices = ['reference_price','far_price', 'near_price', 'ask_price', 'bid_price', 'wap']\n    \n    for c in combinations(prices, 2):\n        \n        df[f'{c[0]}_minus_{c[1]}'] = (df[f'{c[0]}'] - df[f'{c[1]}']).astype(np.float32)\n        df[f'{c[0]}_times_{c[1]}'] = (df[f'{c[0]}'] * df[f'{c[1]}']).astype(np.float32)\n        df[f'{c[0]}_{c[1]}_imb'] = df.eval(f'({c[0]}-{c[1]})/({c[0]}+{c[1]})')\n\n    for c in combinations(prices, 3):\n        max_ = df[list(c)].max(axis=1)\n        min_ = df[list(c)].min(axis=1)\n        mid_ = df[list(c)].sum(axis=1)-min_-max_\n        df[f'{c[0]}_{c[1]}_{c[2]}_imb2'] = (max_-mid_)/(mid_-min_)\n\n        \n    df.drop(columns=['date_id'], inplace=True)\n#     df=reduce_memory_usage(df)\n    gc.collect()\n    return df","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:49.749656Z","iopub.execute_input":"2023-10-28T11:26:49.749973Z","iopub.status.idle":"2023-10-28T11:26:49.765063Z","shell.execute_reply.started":"2023-10-28T11:26:49.749946Z","shell.execute_reply":"2023-10-28T11:26:49.76398Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = df.dropna(subset=['target'])\nx=df.drop(['target'],axis=1)\ny=df[['target']]\nx=data_preprocessing(x)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:26:49.766606Z","iopub.execute_input":"2023-10-28T11:26:49.766917Z","iopub.status.idle":"2023-10-28T11:28:18.265598Z","shell.execute_reply.started":"2023-10-28T11:26:49.76689Z","shell.execute_reply":"2023-10-28T11:28:18.264523Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#### fyller på tomma rader med 0 och infinity rader med 0 ","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:18.266807Z","iopub.execute_input":"2023-10-28T11:28:18.267094Z","iopub.status.idle":"2023-10-28T11:28:18.272014Z","shell.execute_reply.started":"2023-10-28T11:28:18.267069Z","shell.execute_reply":"2023-10-28T11:28:18.270811Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"scrolled":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"x.replace([np.inf, -np.inf], 0, inplace=True)\nx.fillna(0, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:18.273513Z","iopub.execute_input":"2023-10-28T11:28:18.273871Z","iopub.status.idle":"2023-10-28T11:28:25.98099Z","shell.execute_reply.started":"2023-10-28T11:28:18.273842Z","shell.execute_reply":"2023-10-28T11:28:25.980014Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"missin_valu_count=x.isna().sum()\nprint(missin_valu_count)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:25.982242Z","iopub.execute_input":"2023-10-28T11:28:25.982738Z","iopub.status.idle":"2023-10-28T11:28:26.63015Z","shell.execute_reply.started":"2023-10-28T11:28:25.982702Z","shell.execute_reply":"2023-10-28T11:28:26.62905Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"x","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:26.631402Z","iopub.execute_input":"2023-10-28T11:28:26.631722Z","iopub.status.idle":"2023-10-28T11:28:27.836515Z","shell.execute_reply.started":"2023-10-28T11:28:26.631694Z","shell.execute_reply":"2023-10-28T11:28:27.835441Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_absolute_error\nfrom lightgbm import LGBMRegressor\n","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:27.83804Z","iopub.execute_input":"2023-10-28T11:28:27.838425Z","iopub.status.idle":"2023-10-28T11:28:28.897239Z","shell.execute_reply.started":"2023-10-28T11:28:27.838393Z","shell.execute_reply":"2023-10-28T11:28:28.896186Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# LGBM Regressor","metadata":{}},{"cell_type":"markdown","source":"### Splittra till train och test set","metadata":{}},{"cell_type":"code","source":"# Dela data i tränings- och testdata\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\n\n","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:28.898439Z","iopub.execute_input":"2023-10-28T11:28:28.898755Z","iopub.status.idle":"2023-10-28T11:28:35.190632Z","shell.execute_reply.started":"2023-10-28T11:28:28.898727Z","shell.execute_reply":"2023-10-28T11:28:35.189561Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Skapa K Fold eller Random Seach för att få de bästa parametrarna ","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\nparams={'n_estimators': 295,\n        'learning_rate': 0.09067336722500349,\n        'max_depth': 8,\n        'num_leaves': 49,\n        'min_child_samples': 12,\n        'subsample': 0.9360567971587355,\n        'colsample_bytree': 0.7246647713754758,\n        'reg_alpha': 2.1474881766556586e-06,\n        'reg_lambda': 0.0007812582513259263}\nLGB=LGBMRegressor(**params, random_state=42,device='cpu')\nLGB.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:28:35.191968Z","iopub.execute_input":"2023-10-28T11:28:35.192273Z","iopub.status.idle":"2023-10-28T11:31:43.456998Z","shell.execute_reply.started":"2023-10-28T11:28:35.192247Z","shell.execute_reply":"2023-10-28T11:31:43.456097Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pred_LGB=LGB.predict(X_test)\nprint(\"MAE score of Support Vector Regression Model =\",mean_absolute_error(y_test, pred_LGB))\n# models.append(LGB)","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:31:43.45821Z","iopub.execute_input":"2023-10-28T11:31:43.459229Z","iopub.status.idle":"2023-10-28T11:31:50.380053Z","shell.execute_reply.started":"2023-10-28T11:31:43.459195Z","shell.execute_reply":"2023-10-28T11:31:50.378644Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Making predictions","metadata":{}},{"cell_type":"code","source":"import optiver2023\nenv = optiver2023.make_env()","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:31:50.381753Z","iopub.execute_input":"2023-10-28T11:31:50.382498Z","iopub.status.idle":"2023-10-28T11:31:50.395155Z","shell.execute_reply.started":"2023-10-28T11:31:50.382464Z","shell.execute_reply":"2023-10-28T11:31:50.394004Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"counter=0\niter_test = env.iter_test()\n\nfor (test, revealed_targets, sample_prediction) in iter_test:\n    feat = data_preprocessing(test[['stock_id', 'date_id', 'seconds_in_bucket', 'imbalance_size',\n       'imbalance_buy_sell_flag', 'reference_price', 'matched_size','far_price', 'near_price',\n       'bid_price', 'bid_size', 'ask_price', 'ask_size', 'wap','row_id']])\n    #print(feat.isnull().sum())\n    sample_prediction['target'] = LGB.predict(feat)\n    env.predict(sample_prediction)\n    counter += 1","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:31:50.397601Z","iopub.execute_input":"2023-10-28T11:31:50.397931Z","iopub.status.idle":"2023-10-28T11:32:37.133338Z","shell.execute_reply.started":"2023-10-28T11:31:50.397902Z","shell.execute_reply":"2023-10-28T11:32:37.132069Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sample_prediction.iloc[1:60]","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:33:58.906975Z","iopub.execute_input":"2023-10-28T11:33:58.907754Z","iopub.status.idle":"2023-10-28T11:33:58.924941Z","shell.execute_reply.started":"2023-10-28T11:33:58.907709Z","shell.execute_reply":"2023-10-28T11:33:58.923629Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Modellen funkade bra med en MAE på 6,234 vilket är acceptabelt\nNästa steg är att köra en Desision treee model med en grid search för att få bästa parametrar \nSedan kan man gå vidare med API:et och uppgiften är klar **","metadata":{}},{"cell_type":"code","source":"\n","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:38:20.860808Z","iopub.execute_input":"2023-10-28T11:38:20.861255Z","iopub.status.idle":"2023-10-28T11:38:20.866701Z","shell.execute_reply.started":"2023-10-28T11:38:20.861223Z","shell.execute_reply":"2023-10-28T11:38:20.865496Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:32:38.247201Z","iopub.status.idle":"2023-10-28T11:32:38.247682Z","shell.execute_reply.started":"2023-10-28T11:32:38.24746Z","shell.execute_reply":"2023-10-28T11:32:38.247483Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:32:38.249534Z","iopub.status.idle":"2023-10-28T11:32:38.250593Z","shell.execute_reply.started":"2023-10-28T11:32:38.250373Z","shell.execute_reply":"2023-10-28T11:32:38.250394Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:32:38.251767Z","iopub.status.idle":"2023-10-28T11:32:38.252197Z","shell.execute_reply.started":"2023-10-28T11:32:38.251998Z","shell.execute_reply":"2023-10-28T11:32:38.252023Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:32:38.254326Z","iopub.status.idle":"2023-10-28T11:32:38.254722Z","shell.execute_reply.started":"2023-10-28T11:32:38.254533Z","shell.execute_reply":"2023-10-28T11:32:38.254552Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:32:38.256233Z","iopub.status.idle":"2023-10-28T11:32:38.25666Z","shell.execute_reply.started":"2023-10-28T11:32:38.256468Z","shell.execute_reply":"2023-10-28T11:32:38.256487Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Model 4 ","metadata":{"execution":{"iopub.status.busy":"2023-10-28T11:32:38.257889Z","iopub.status.idle":"2023-10-28T11:32:38.258257Z","shell.execute_reply.started":"2023-10-28T11:32:38.258079Z","shell.execute_reply":"2023-10-28T11:32:38.258096Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}